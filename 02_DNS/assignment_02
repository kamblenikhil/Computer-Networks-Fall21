Name - Nikhil Kamble
Username - nkamble

=========================================================================

1. How can DNS be used to load balance services? Give a concrete explanation for google.com
[Answer] - DNS serves as the phone-book for the Internet - it basically maps domain names like "google.com" which are equivalent to the personal names in the phone-book, to the Internet Protocol (IP) addresses like "142.250.190.46", which are equivalent to the phone numbers. DNS Load Balancing is a technique used to help distribute the request for a domain accross different machines so that no single machine is bearing the entire load. This will also improve the website performance as the traffic load can be shared with many server machine than a single one.
For example, I have a domain name xyz.com and I have a 'server A' which takes x amount of capacity and another 'server B' with 2x amount of capacity to handle the DNS Traffic. In this case, the load balancer would give twice the amount of traffic to server B in comparison to server A. It would do this by returning the servers IP address in response to DNS queries. 

The following is an example of 'lbd command' on Kali Linux (Load Balancer Detection) which detects a given domain by using DNS and/or HTTP load balancing via server and date:header 

-------------------[Example 1 for www.google.com']-----------------------

root@kali:~# lbd www.google.com

lbd - load balancing detector 0.4 - Checks if a given domain uses load-balancing.
Written by Stefan Behte (http://ge.mine.nu)
Proof-of-concept! Might give false positives.

Checking for DNS-Loadbalancing: NOT FOUND
Checking for HTTP-Loadbalancing [Server]:
gws
NOT FOUND

Checking for HTTP-Loadbalancing [Date]: 21:09:38, 21:09:38, 21:09:38, 21:09:38, 21:09:38, 21:09:39, 21:09:39, 21:09:39, 21:09:39, 21:09:39, 21:09:39, 21:09:39, 21:09:41, 21:09:41, 21:09:41, 21:09:41, 21:09:41, 21:09:41, 21:09:41, 21:09:41, 21:09:42, 21:09:42, 21:09:42, 21:09:42, 21:09:42, 21:09:42, 21:09:43, 21:09:43, 21:09:43, 21:09:43, 21:09:44, 21:09:44, 21:09:44, 21:09:45, 21:09:45, 21:09:45, 21:09:45, 21:09:45, 21:09:46, 21:09:46, 21:09:46, 21:09:46, 21:09:46, 21:09:47, 21:09:47, 21:09:47, 21:09:47, 21:09:47, 21:09:47, 21:09:47, NOT FOUND

Checking for HTTP-Loadbalancing [Diff]: FOUND
< Expires: Fri, 17 Sep 2021 21:09:47 GMT
> Expires: Fri, 17 Sep 2021 21:09:48 GMT

www.google.com does Load-balancing. Found via Methods: HTTP[Diff]

-------------------Example 2 for www.yahoo.com']--------------------------

root@kali:~# lbd yahoo.com

lbd - load balancing detector 0.4 - Checks if a given domain uses load-balancing.
Written by Stefan Behte (http://ge.mine.nu)
Proof-of-concept! Might give false positives.

Checking for DNS-Loadbalancing: FOUND
yahoo.com has address 98.137.11.163
yahoo.com has address 98.137.11.164
yahoo.com has address 74.6.143.25
yahoo.com has address 74.6.231.21
yahoo.com has address 74.6.143.26
yahoo.com has address 74.6.231.20

Checking for HTTP-Loadbalancing [Server]:
ATS
NOT FOUND

Checking for HTTP-Loadbalancing [Date]: 22:00:11, 22:00:12, 22:00:12, 22:00:12, 22:00:12, 22:00:13, 22:00:13, 22:00:13, 22:00:13, 22:00:14, 22:00:14, 22:00:14, 22:00:15, 22:00:15, 22:00:15, 22:00:16, 22:00:16, 22:00:16, 22:00:17, 22:00:17, 22:00:17, 22:00:17, 22:00:18, 22:00:18, 22:00:18, 22:00:18, 22:00:19, 22:00:19, 22:00:19, 22:00:19, 22:00:20, 22:00:20, 22:00:20, 22:00:21, 22:00:21, 22:00:21, 22:00:22, 22:00:22, 22:00:22, 22:00:22, 22:00:23, 22:00:23, 22:00:23, 22:00:23, 22:00:24, 22:00:24, 22:00:24, 22:00:24, 22:00:25, 22:00:25, NOT FOUND

Checking for HTTP-Loadbalancing [Diff]: NOT FOUND

yahoo.com does Load-balancing. Found via Methods: DNS


=================================================================================

2. DNS has been around since 1985 and the core protocol is still being used today. What is the inherent weakness of DNS (as of RFC1035; excluding DNSSEC)? Give an example of how an attacker might utilize it.


=================================================================================


3. Perform a manual iterative DNS query for mail-relay.iu.edu with dig starting from the root servers. List all commands and their outputs and explain why you issued every command. Do not use tracing features (dig +trace) for your final write-down.

=================================================================================

4. You are sitting in a coffee shop and are connected to a public WLAN. You fire up wireshark and start sniffing the traffic of other customers. You notice that all of their traffic is over https so you cannot simply read it. You also notice something striking about the DNS traffic, what is it and what are the implications?
=================================================================================

5. Suppose that IU has an internal DNS cache. You are an ordinary user (no network admin). Can you determine (and if yes, how) if a given external website was recently accessed?





